
***Only including the portions relevant to Input Controls as the overall script is massive. View the Visual Studio version for the full script.

//contains the string handles for correct input names.
//Button functions spread throughout this game make calls to the project manager settings and the Input Axes list by string.

 #region InputStrings

    //Base Strings
    public string horizontalInput;
    public string verticalInput;
    public string camXInput;
    public string camYInput;
    public string headbuttInput;
    public string jumpInput;
    public string pauseInput;
    public string interactInput;
    public string submitInput;
    public string cancelInput;

    //PC Axes
    private string horizPC = "Horizontal PC";
    private string vertPC = "Vertical PC";
    private string camXPC = "CamX PC";
    private string camYPC = "CamY PC";
    private string headbuttPC = "Headbutt PC";

    //PC Buttons
    private string jumpPC = "Jump PC";
    private string pausePC = "Pause PC";
    private string interactPC = "Interact PC";
    private string submitPC = "Submit PC";
    private string cancelPC = "Cancel PC";

    //Xbox Axes
    private string horizXbox = "Horizontal Xbox";
    private string vertXbox = "Vertical Xbox";
    private string camXXbox = "CamX Xbox";
    private string camYXbox = "CamY Xbox";
    private string headbuttXbox = "Headbutt Xbox";

    //Xbox Buttons
    private string jumpXbox = "Jump Xbox";
    private string pauseXbox = "Pause Xbox";
    private string interactXbox = "Interact Xbox";
    private string submitXbox = "Submit Xbox";
    private string cancelXbox = "Cancel Xbox";

    //PS4 Axes
    private string horizPS4 = "Horizontal PS4";
    private string vertPS4 = "Vertical PS4";
    private string camXPS4 = "CamX PS4";
    private string camYPS4 = "CamY PS4";
    private string headbuttPS4 = "Headbutt PS4";

    //PS4 Buttons
    private string jumpPS4 = "Jump PS4";
    private string pausePS4 = "Pause PS4";
    private string interactPS4 = "Interact PS4";
    private string submitPS4 = "Submit PS4";
    private string cancelPS4 = "Cancel PS4";
    #endregion

void Start()
    {
        //Sets the definitions for string calls to input axes to the PC settings by default.

        horizontalInput = horizPC;
        verticalInput = vertPC;
        camXInput = camXPC;
        camYInput = camYPC;
        headbuttInput = headbuttPC;
        jumpInput = jumpPC;
        pauseInput = pausePC;
        interactInput = interactPC;
        submitInput = submitPC;
        cancelInput = cancelPC;

        sceneIndex = SceneManager.GetActiveScene().buildIndex;
        isDead = false;
        //if (playerController != null)
        //{
        //    Invoke("SetAcorns", 1);
        //}


        if (mainMenu != null)
        {
            mainMenu.sensitivityValue.text = lookSensitivityX.ToString();
        }

        else if (pauseMenu != null)
        {
            pauseMenu.sensitivityValue.text = lookSensitivityX.ToString();
        }
        //oldMulch = playerMulch;
        tempSceneIndex += 1;
    }



//A small slice of the Update function; checks continuously for input from the player based on joystick string names which are read in the InputReader class.

//Each check calls the GetInputState() function of InputReader to determine the current source of input.

//The universal string handles (ex.horizontalInput, verticalInput, etc.) which populate other scripts such as the PlayerController, then have their values changed

//to call the correct input axes.


 void Update()
    {
        
        #region Determine Input

        Debug.Log(interactInput);

        inputReader.GetInputState();

        if(inputReader.in_State == InputReader.gameInputState.Xbox)
        {
            horizontalInput = horizXbox;
            verticalInput = vertXbox;
            camXInput = camXXbox;
            camYInput = camYXbox;
            headbuttInput = headbuttXbox;
            jumpInput = jumpXbox;
            pauseInput = pauseXbox;
            interactInput = interactXbox;
            submitInput = submitXbox;
            cancelInput = cancelXbox;
        }
        else if(inputReader.in_State == InputReader.gameInputState.PS4)
        {
            horizontalInput = horizPS4;
            verticalInput = vertPS4;
            camXInput = camXPS4;
            camYInput = camYPS4;
            headbuttInput = headbuttPS4;
            jumpInput = jumpPS4;
            pauseInput = pausePS4;
            interactInput = interactPS4;
            submitInput = submitPS4;
            cancelInput = cancelPS4;
        }
        else
        {
            horizontalInput = horizPC;
            verticalInput = vertPC;
            camXInput = camXPC;
            camYInput = camYPC;
            headbuttInput = headbuttPC;
            jumpInput = jumpPC;
            pauseInput = pausePC;
            //if(interactInput != interactPC)
            interactInput = interactPC;
            submitInput = submitPC;
            cancelInput = cancelPC;
        }
        #endregion
